"""initial schema with protected columns

Revision ID: 05c98e3f8e3c
Revises: 
Create Date: 2025-07-17 07:54:50.419014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '05c98e3f8e3c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('url_groups',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('protected', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_groups',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('protected', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('email')
    )
    op.create_table('urls',
    sa.Column('url_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('url_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['url_group_id'], ['url_groups.group_id'], ),
    sa.PrimaryKeyConstraint('url_id'),
    sa.UniqueConstraint('path')
    )
    op.create_table('user_group_members',
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_email'], ['users.email'], ),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.group_id'], ),
    sa.PrimaryKeyConstraint('user_group_id', 'user_email')
    )
    op.create_table('user_group_url_group_associations',
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.Column('url_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['url_group_id'], ['url_groups.group_id'], ),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.group_id'], ),
    sa.PrimaryKeyConstraint('user_group_id', 'url_group_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_group_url_group_associations')
    op.drop_table('user_group_members')
    op.drop_table('urls')
    op.drop_table('users')
    op.drop_table('user_groups')
    op.drop_table('url_groups')
    # ### end Alembic commands ###
